/* 
 * Payment Gateway
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = Cpayment.Connector.Client.OpenAPIDateConverter;

namespace Cpayment.Connector.Model
{
    /// <summary>
    /// All payment option list data for the response
    /// </summary>
    [DataContract]
    public partial class PaymentOptionsResponse :  IEquatable<PaymentOptionsResponse>
    {
        /// <summary>
        /// The response code of the service
        /// </summary>
        /// <value>The response code of the service</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ResponseCodeEnum
        {
            /// <summary>
            /// Enum Unknown for value: unknown
            /// </summary>
            [EnumMember(Value = "unknown")]
            Unknown = 1,

            /// <summary>
            /// Enum Success for value: success
            /// </summary>
            [EnumMember(Value = "success")]
            Success = 2,

            /// <summary>
            /// Enum Refused for value: refused
            /// </summary>
            [EnumMember(Value = "refused")]
            Refused = 3,

            /// <summary>
            /// Enum InternalFailure for value: internalFailure
            /// </summary>
            [EnumMember(Value = "internalFailure")]
            InternalFailure = 4

        }

        /// <summary>
        /// The response code of the service
        /// </summary>
        /// <value>The response code of the service</value>
        [DataMember(Name="responseCode", EmitDefaultValue=false)]
        public ResponseCodeEnum? ResponseCode { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentOptionsResponse" /> class.
        /// </summary>
        /// <param name="responseCode">The response code of the service.</param>
        /// <param name="paymentOptions">All payment options data.</param>
        /// <param name="responseMessage">The global response message.</param>
        public PaymentOptionsResponse(ResponseCodeEnum? responseCode = default(ResponseCodeEnum?), List<PaymentOption> paymentOptions = default(List<PaymentOption>), string responseMessage = default(string))
        {
            this.ResponseCode = responseCode;
            this.PaymentOptions = paymentOptions;
            this.ResponseMessage = responseMessage;
        }
        

        /// <summary>
        /// All payment options data
        /// </summary>
        /// <value>All payment options data</value>
        [DataMember(Name="paymentOptions", EmitDefaultValue=false)]
        public List<PaymentOption> PaymentOptions { get; set; }

        /// <summary>
        /// The global response message
        /// </summary>
        /// <value>The global response message</value>
        [DataMember(Name="responseMessage", EmitDefaultValue=false)]
        public string ResponseMessage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentOptionsResponse {\n");
            sb.Append("  ResponseCode: ").Append(ResponseCode).Append("\n");
            sb.Append("  PaymentOptions: ").Append(PaymentOptions).Append("\n");
            sb.Append("  ResponseMessage: ").Append(ResponseMessage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentOptionsResponse);
        }

        /// <summary>
        /// Returns true if PaymentOptionsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentOptionsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentOptionsResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ResponseCode == input.ResponseCode ||
                    (this.ResponseCode != null &&
                    this.ResponseCode.Equals(input.ResponseCode))
                ) && 
                (
                    this.PaymentOptions == input.PaymentOptions ||
                    this.PaymentOptions != null &&
                    input.PaymentOptions != null &&
                    this.PaymentOptions.SequenceEqual(input.PaymentOptions)
                ) && 
                (
                    this.ResponseMessage == input.ResponseMessage ||
                    (this.ResponseMessage != null &&
                    this.ResponseMessage.Equals(input.ResponseMessage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ResponseCode != null)
                    hashCode = hashCode * 59 + this.ResponseCode.GetHashCode();
                if (this.PaymentOptions != null)
                    hashCode = hashCode * 59 + this.PaymentOptions.GetHashCode();
                if (this.ResponseMessage != null)
                    hashCode = hashCode * 59 + this.ResponseMessage.GetHashCode();
                return hashCode;
            }
        }
    }

}
