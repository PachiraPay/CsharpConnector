/* 
 * Payment Gateway
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = pachirapay.Connector.Client.OpenAPIDateConverter;

namespace pachirapay.Connector.Model
{
    /// <summary>
    /// The CardPayment Request for the PUT
    /// </summary>
    [DataContract]
    public partial class Card3DsValidateAuthenticationAndAuthorizeRequest :  IEquatable<Card3DsValidateAuthenticationAndAuthorizeRequest>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Card3DsValidateAuthenticationAndAuthorizeRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Card3DsValidateAuthenticationAndAuthorizeRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Card3DsValidateAuthenticationAndAuthorizeRequest" /> class.
        /// </summary>
        /// <param name="merchantId">The merchant identifier (required).</param>
        /// <param name="merchantSiteId">The merchant site identifier (required).</param>
        /// <param name="paymentRequestId">The payment session identifier (guid), use it for 3DS payment (required).</param>
        /// <param name="orderRef">The order reference linked to the schedule and transaction (required).</param>
        /// <param name="orderTag">The order tag is a label for the schedule.</param>
        public Card3DsValidateAuthenticationAndAuthorizeRequest(int? merchantId = default(int?), string merchantSiteId = default(string), string paymentRequestId = default(string), string orderRef = default(string), string orderTag = default(string))
        {
            // to ensure "merchantId" is required (not null)
            if (merchantId == null)
            {
                throw new InvalidDataException("merchantId is a required property for Card3DsValidateAuthenticationAndAuthorizeRequest and cannot be null");
            }
            else
            {
                this.MerchantId = merchantId;
            }
            
            // to ensure "merchantSiteId" is required (not null)
            if (merchantSiteId == null)
            {
                throw new InvalidDataException("merchantSiteId is a required property for Card3DsValidateAuthenticationAndAuthorizeRequest and cannot be null");
            }
            else
            {
                this.MerchantSiteId = merchantSiteId;
            }
            
            // to ensure "paymentRequestId" is required (not null)
            if (paymentRequestId == null)
            {
                throw new InvalidDataException("paymentRequestId is a required property for Card3DsValidateAuthenticationAndAuthorizeRequest and cannot be null");
            }
            else
            {
                this.PaymentRequestId = paymentRequestId;
            }
            
            // to ensure "orderRef" is required (not null)
            if (orderRef == null)
            {
                throw new InvalidDataException("orderRef is a required property for Card3DsValidateAuthenticationAndAuthorizeRequest and cannot be null");
            }
            else
            {
                this.OrderRef = orderRef;
            }
            
            this.OrderTag = orderTag;
        }
        
        /// <summary>
        /// The merchant identifier
        /// </summary>
        /// <value>The merchant identifier</value>
        [DataMember(Name="merchantId", EmitDefaultValue=false)]
        public int? MerchantId { get; set; }

        /// <summary>
        /// The merchant site identifier
        /// </summary>
        /// <value>The merchant site identifier</value>
        [DataMember(Name="merchantSiteId", EmitDefaultValue=false)]
        public string MerchantSiteId { get; set; }

        /// <summary>
        /// The payment session identifier (guid), use it for 3DS payment
        /// </summary>
        /// <value>The payment session identifier (guid), use it for 3DS payment</value>
        [DataMember(Name="paymentRequestId", EmitDefaultValue=false)]
        public string PaymentRequestId { get; set; }

        /// <summary>
        /// The order reference linked to the schedule and transaction
        /// </summary>
        /// <value>The order reference linked to the schedule and transaction</value>
        [DataMember(Name="orderRef", EmitDefaultValue=false)]
        public string OrderRef { get; set; }

        /// <summary>
        /// The order tag is a label for the schedule
        /// </summary>
        /// <value>The order tag is a label for the schedule</value>
        [DataMember(Name="orderTag", EmitDefaultValue=false)]
        public string OrderTag { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Card3DsValidateAuthenticationAndAuthorizeRequest {\n");
            sb.Append("  MerchantId: ").Append(MerchantId).Append("\n");
            sb.Append("  MerchantSiteId: ").Append(MerchantSiteId).Append("\n");
            sb.Append("  PaymentRequestId: ").Append(PaymentRequestId).Append("\n");
            sb.Append("  OrderRef: ").Append(OrderRef).Append("\n");
            sb.Append("  OrderTag: ").Append(OrderTag).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Card3DsValidateAuthenticationAndAuthorizeRequest);
        }

        /// <summary>
        /// Returns true if Card3DsValidateAuthenticationAndAuthorizeRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of Card3DsValidateAuthenticationAndAuthorizeRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Card3DsValidateAuthenticationAndAuthorizeRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MerchantId == input.MerchantId ||
                    (this.MerchantId != null &&
                    this.MerchantId.Equals(input.MerchantId))
                ) && 
                (
                    this.MerchantSiteId == input.MerchantSiteId ||
                    (this.MerchantSiteId != null &&
                    this.MerchantSiteId.Equals(input.MerchantSiteId))
                ) && 
                (
                    this.PaymentRequestId == input.PaymentRequestId ||
                    (this.PaymentRequestId != null &&
                    this.PaymentRequestId.Equals(input.PaymentRequestId))
                ) && 
                (
                    this.OrderRef == input.OrderRef ||
                    (this.OrderRef != null &&
                    this.OrderRef.Equals(input.OrderRef))
                ) && 
                (
                    this.OrderTag == input.OrderTag ||
                    (this.OrderTag != null &&
                    this.OrderTag.Equals(input.OrderTag))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MerchantId != null)
                    hashCode = hashCode * 59 + this.MerchantId.GetHashCode();
                if (this.MerchantSiteId != null)
                    hashCode = hashCode * 59 + this.MerchantSiteId.GetHashCode();
                if (this.PaymentRequestId != null)
                    hashCode = hashCode * 59 + this.PaymentRequestId.GetHashCode();
                if (this.OrderRef != null)
                    hashCode = hashCode * 59 + this.OrderRef.GetHashCode();
                if (this.OrderTag != null)
                    hashCode = hashCode * 59 + this.OrderTag.GetHashCode();
                return hashCode;
            }
        }
    }

}
