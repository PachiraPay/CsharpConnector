/* 
 * Payment Gateway
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = pachirapay.Connector.Client.OpenAPIDateConverter;

namespace pachirapay.Connector.Model
{
    /// <summary>
    /// All schedule data
    /// </summary>
    [DataContract]
    public partial class Schedule :  IEquatable<Schedule>
    {
        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        /// <value>Gets or Sets Currency</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CurrencyEnum
        {
            /// <summary>
            /// Enum Unknown for value: unknown
            /// </summary>
            [EnumMember(Value = "unknown")]
            Unknown = 1,

            /// <summary>
            /// Enum All for value: all
            /// </summary>
            [EnumMember(Value = "all")]
            All = 2,

            /// <summary>
            /// Enum Dzd for value: dzd
            /// </summary>
            [EnumMember(Value = "dzd")]
            Dzd = 3,

            /// <summary>
            /// Enum Ars for value: ars
            /// </summary>
            [EnumMember(Value = "ars")]
            Ars = 4,

            /// <summary>
            /// Enum Aud for value: aud
            /// </summary>
            [EnumMember(Value = "aud")]
            Aud = 5,

            /// <summary>
            /// Enum Bsd for value: bsd
            /// </summary>
            [EnumMember(Value = "bsd")]
            Bsd = 6,

            /// <summary>
            /// Enum Bhd for value: bhd
            /// </summary>
            [EnumMember(Value = "bhd")]
            Bhd = 7,

            /// <summary>
            /// Enum Bdt for value: bdt
            /// </summary>
            [EnumMember(Value = "bdt")]
            Bdt = 8,

            /// <summary>
            /// Enum Amd for value: amd
            /// </summary>
            [EnumMember(Value = "amd")]
            Amd = 9,

            /// <summary>
            /// Enum Bbd for value: bbd
            /// </summary>
            [EnumMember(Value = "bbd")]
            Bbd = 10,

            /// <summary>
            /// Enum Bmd for value: bmd
            /// </summary>
            [EnumMember(Value = "bmd")]
            Bmd = 11,

            /// <summary>
            /// Enum Btn for value: btn
            /// </summary>
            [EnumMember(Value = "btn")]
            Btn = 12,

            /// <summary>
            /// Enum Bob for value: bob
            /// </summary>
            [EnumMember(Value = "bob")]
            Bob = 13,

            /// <summary>
            /// Enum Bwp for value: bwp
            /// </summary>
            [EnumMember(Value = "bwp")]
            Bwp = 14,

            /// <summary>
            /// Enum Bzd for value: bzd
            /// </summary>
            [EnumMember(Value = "bzd")]
            Bzd = 15,

            /// <summary>
            /// Enum Sbd for value: sbd
            /// </summary>
            [EnumMember(Value = "sbd")]
            Sbd = 16,

            /// <summary>
            /// Enum Bnd for value: bnd
            /// </summary>
            [EnumMember(Value = "bnd")]
            Bnd = 17,

            /// <summary>
            /// Enum Mmk for value: mmk
            /// </summary>
            [EnumMember(Value = "mmk")]
            Mmk = 18,

            /// <summary>
            /// Enum Bif for value: bif
            /// </summary>
            [EnumMember(Value = "bif")]
            Bif = 19,

            /// <summary>
            /// Enum Khr for value: khr
            /// </summary>
            [EnumMember(Value = "khr")]
            Khr = 20,

            /// <summary>
            /// Enum Cad for value: cad
            /// </summary>
            [EnumMember(Value = "cad")]
            Cad = 21,

            /// <summary>
            /// Enum Cve for value: cve
            /// </summary>
            [EnumMember(Value = "cve")]
            Cve = 22,

            /// <summary>
            /// Enum Kyd for value: kyd
            /// </summary>
            [EnumMember(Value = "kyd")]
            Kyd = 23,

            /// <summary>
            /// Enum Lkr for value: lkr
            /// </summary>
            [EnumMember(Value = "lkr")]
            Lkr = 24,

            /// <summary>
            /// Enum Clp for value: clp
            /// </summary>
            [EnumMember(Value = "clp")]
            Clp = 25,

            /// <summary>
            /// Enum Cny for value: cny
            /// </summary>
            [EnumMember(Value = "cny")]
            Cny = 26,

            /// <summary>
            /// Enum Cop for value: cop
            /// </summary>
            [EnumMember(Value = "cop")]
            Cop = 27,

            /// <summary>
            /// Enum Kmf for value: kmf
            /// </summary>
            [EnumMember(Value = "kmf")]
            Kmf = 28,

            /// <summary>
            /// Enum Crc for value: crc
            /// </summary>
            [EnumMember(Value = "crc")]
            Crc = 29,

            /// <summary>
            /// Enum Hrk for value: hrk
            /// </summary>
            [EnumMember(Value = "hrk")]
            Hrk = 30,

            /// <summary>
            /// Enum Cup for value: cup
            /// </summary>
            [EnumMember(Value = "cup")]
            Cup = 31,

            /// <summary>
            /// Enum Czk for value: czk
            /// </summary>
            [EnumMember(Value = "czk")]
            Czk = 32,

            /// <summary>
            /// Enum Dkk for value: dkk
            /// </summary>
            [EnumMember(Value = "dkk")]
            Dkk = 33,

            /// <summary>
            /// Enum Dop for value: dop
            /// </summary>
            [EnumMember(Value = "dop")]
            Dop = 34,

            /// <summary>
            /// Enum Svc for value: svc
            /// </summary>
            [EnumMember(Value = "svc")]
            Svc = 35,

            /// <summary>
            /// Enum Etb for value: etb
            /// </summary>
            [EnumMember(Value = "etb")]
            Etb = 36,

            /// <summary>
            /// Enum Ern for value: ern
            /// </summary>
            [EnumMember(Value = "ern")]
            Ern = 37,

            /// <summary>
            /// Enum Fkp for value: fkp
            /// </summary>
            [EnumMember(Value = "fkp")]
            Fkp = 38,

            /// <summary>
            /// Enum Fjd for value: fjd
            /// </summary>
            [EnumMember(Value = "fjd")]
            Fjd = 39,

            /// <summary>
            /// Enum Djf for value: djf
            /// </summary>
            [EnumMember(Value = "djf")]
            Djf = 40,

            /// <summary>
            /// Enum Gmd for value: gmd
            /// </summary>
            [EnumMember(Value = "gmd")]
            Gmd = 41,

            /// <summary>
            /// Enum Gip for value: gip
            /// </summary>
            [EnumMember(Value = "gip")]
            Gip = 42,

            /// <summary>
            /// Enum Gtq for value: gtq
            /// </summary>
            [EnumMember(Value = "gtq")]
            Gtq = 43,

            /// <summary>
            /// Enum Gnf for value: gnf
            /// </summary>
            [EnumMember(Value = "gnf")]
            Gnf = 44,

            /// <summary>
            /// Enum Gyd for value: gyd
            /// </summary>
            [EnumMember(Value = "gyd")]
            Gyd = 45,

            /// <summary>
            /// Enum Htg for value: htg
            /// </summary>
            [EnumMember(Value = "htg")]
            Htg = 46,

            /// <summary>
            /// Enum Hnl for value: hnl
            /// </summary>
            [EnumMember(Value = "hnl")]
            Hnl = 47,

            /// <summary>
            /// Enum Hkd for value: hkd
            /// </summary>
            [EnumMember(Value = "hkd")]
            Hkd = 48,

            /// <summary>
            /// Enum Huf for value: huf
            /// </summary>
            [EnumMember(Value = "huf")]
            Huf = 49,

            /// <summary>
            /// Enum Isk for value: isk
            /// </summary>
            [EnumMember(Value = "isk")]
            Isk = 50,

            /// <summary>
            /// Enum Inr for value: inr
            /// </summary>
            [EnumMember(Value = "inr")]
            Inr = 51,

            /// <summary>
            /// Enum Idr for value: idr
            /// </summary>
            [EnumMember(Value = "idr")]
            Idr = 52,

            /// <summary>
            /// Enum Irr for value: irr
            /// </summary>
            [EnumMember(Value = "irr")]
            Irr = 53,

            /// <summary>
            /// Enum Iqd for value: iqd
            /// </summary>
            [EnumMember(Value = "iqd")]
            Iqd = 54,

            /// <summary>
            /// Enum Ils for value: ils
            /// </summary>
            [EnumMember(Value = "ils")]
            Ils = 55,

            /// <summary>
            /// Enum Jmd for value: jmd
            /// </summary>
            [EnumMember(Value = "jmd")]
            Jmd = 56,

            /// <summary>
            /// Enum Jpy for value: jpy
            /// </summary>
            [EnumMember(Value = "jpy")]
            Jpy = 57,

            /// <summary>
            /// Enum Kzt for value: kzt
            /// </summary>
            [EnumMember(Value = "kzt")]
            Kzt = 58,

            /// <summary>
            /// Enum Jod for value: jod
            /// </summary>
            [EnumMember(Value = "jod")]
            Jod = 59,

            /// <summary>
            /// Enum Kes for value: kes
            /// </summary>
            [EnumMember(Value = "kes")]
            Kes = 60,

            /// <summary>
            /// Enum Kpw for value: kpw
            /// </summary>
            [EnumMember(Value = "kpw")]
            Kpw = 61,

            /// <summary>
            /// Enum Krw for value: krw
            /// </summary>
            [EnumMember(Value = "krw")]
            Krw = 62,

            /// <summary>
            /// Enum Kwd for value: kwd
            /// </summary>
            [EnumMember(Value = "kwd")]
            Kwd = 63,

            /// <summary>
            /// Enum Kgs for value: kgs
            /// </summary>
            [EnumMember(Value = "kgs")]
            Kgs = 64,

            /// <summary>
            /// Enum Lak for value: lak
            /// </summary>
            [EnumMember(Value = "lak")]
            Lak = 65,

            /// <summary>
            /// Enum Lbp for value: lbp
            /// </summary>
            [EnumMember(Value = "lbp")]
            Lbp = 66,

            /// <summary>
            /// Enum Lsl for value: lsl
            /// </summary>
            [EnumMember(Value = "lsl")]
            Lsl = 67,

            /// <summary>
            /// Enum Lrd for value: lrd
            /// </summary>
            [EnumMember(Value = "lrd")]
            Lrd = 68,

            /// <summary>
            /// Enum Lyd for value: lyd
            /// </summary>
            [EnumMember(Value = "lyd")]
            Lyd = 69,

            /// <summary>
            /// Enum Mop for value: mop
            /// </summary>
            [EnumMember(Value = "mop")]
            Mop = 70,

            /// <summary>
            /// Enum Mwk for value: mwk
            /// </summary>
            [EnumMember(Value = "mwk")]
            Mwk = 71,

            /// <summary>
            /// Enum Myr for value: myr
            /// </summary>
            [EnumMember(Value = "myr")]
            Myr = 72,

            /// <summary>
            /// Enum Mvr for value: mvr
            /// </summary>
            [EnumMember(Value = "mvr")]
            Mvr = 73,

            /// <summary>
            /// Enum Mro for value: mro
            /// </summary>
            [EnumMember(Value = "mro")]
            Mro = 74,

            /// <summary>
            /// Enum Mur for value: mur
            /// </summary>
            [EnumMember(Value = "mur")]
            Mur = 75,

            /// <summary>
            /// Enum Mxn for value: mxn
            /// </summary>
            [EnumMember(Value = "mxn")]
            Mxn = 76,

            /// <summary>
            /// Enum Mnt for value: mnt
            /// </summary>
            [EnumMember(Value = "mnt")]
            Mnt = 77,

            /// <summary>
            /// Enum Mdl for value: mdl
            /// </summary>
            [EnumMember(Value = "mdl")]
            Mdl = 78,

            /// <summary>
            /// Enum Mad for value: mad
            /// </summary>
            [EnumMember(Value = "mad")]
            Mad = 79,

            /// <summary>
            /// Enum Omr for value: omr
            /// </summary>
            [EnumMember(Value = "omr")]
            Omr = 80,

            /// <summary>
            /// Enum Nad for value: nad
            /// </summary>
            [EnumMember(Value = "nad")]
            Nad = 81,

            /// <summary>
            /// Enum Npr for value: npr
            /// </summary>
            [EnumMember(Value = "npr")]
            Npr = 82,

            /// <summary>
            /// Enum Ang for value: ang
            /// </summary>
            [EnumMember(Value = "ang")]
            Ang = 83,

            /// <summary>
            /// Enum Awg for value: awg
            /// </summary>
            [EnumMember(Value = "awg")]
            Awg = 84,

            /// <summary>
            /// Enum Vuv for value: vuv
            /// </summary>
            [EnumMember(Value = "vuv")]
            Vuv = 85,

            /// <summary>
            /// Enum Nzd for value: nzd
            /// </summary>
            [EnumMember(Value = "nzd")]
            Nzd = 86,

            /// <summary>
            /// Enum Nio for value: nio
            /// </summary>
            [EnumMember(Value = "nio")]
            Nio = 87,

            /// <summary>
            /// Enum Ngn for value: ngn
            /// </summary>
            [EnumMember(Value = "ngn")]
            Ngn = 88,

            /// <summary>
            /// Enum Nok for value: nok
            /// </summary>
            [EnumMember(Value = "nok")]
            Nok = 89,

            /// <summary>
            /// Enum Pkr for value: pkr
            /// </summary>
            [EnumMember(Value = "pkr")]
            Pkr = 90,

            /// <summary>
            /// Enum Pab for value: pab
            /// </summary>
            [EnumMember(Value = "pab")]
            Pab = 91,

            /// <summary>
            /// Enum Pgk for value: pgk
            /// </summary>
            [EnumMember(Value = "pgk")]
            Pgk = 92,

            /// <summary>
            /// Enum Pyg for value: pyg
            /// </summary>
            [EnumMember(Value = "pyg")]
            Pyg = 93,

            /// <summary>
            /// Enum Pen for value: pen
            /// </summary>
            [EnumMember(Value = "pen")]
            Pen = 94,

            /// <summary>
            /// Enum Php for value: php
            /// </summary>
            [EnumMember(Value = "php")]
            Php = 95,

            /// <summary>
            /// Enum Qar for value: qar
            /// </summary>
            [EnumMember(Value = "qar")]
            Qar = 96,

            /// <summary>
            /// Enum Rub for value: rub
            /// </summary>
            [EnumMember(Value = "rub")]
            Rub = 97,

            /// <summary>
            /// Enum Rwf for value: rwf
            /// </summary>
            [EnumMember(Value = "rwf")]
            Rwf = 98,

            /// <summary>
            /// Enum Shp for value: shp
            /// </summary>
            [EnumMember(Value = "shp")]
            Shp = 99,

            /// <summary>
            /// Enum Std for value: std
            /// </summary>
            [EnumMember(Value = "std")]
            Std = 100,

            /// <summary>
            /// Enum Sar for value: sar
            /// </summary>
            [EnumMember(Value = "sar")]
            Sar = 101,

            /// <summary>
            /// Enum Scr for value: scr
            /// </summary>
            [EnumMember(Value = "scr")]
            Scr = 102,

            /// <summary>
            /// Enum Sll for value: sll
            /// </summary>
            [EnumMember(Value = "sll")]
            Sll = 103,

            /// <summary>
            /// Enum Sgd for value: sgd
            /// </summary>
            [EnumMember(Value = "sgd")]
            Sgd = 104,

            /// <summary>
            /// Enum Vnd for value: vnd
            /// </summary>
            [EnumMember(Value = "vnd")]
            Vnd = 105,

            /// <summary>
            /// Enum Sos for value: sos
            /// </summary>
            [EnumMember(Value = "sos")]
            Sos = 106,

            /// <summary>
            /// Enum Zar for value: zar
            /// </summary>
            [EnumMember(Value = "zar")]
            Zar = 107,

            /// <summary>
            /// Enum Ssp for value: ssp
            /// </summary>
            [EnumMember(Value = "ssp")]
            Ssp = 108,

            /// <summary>
            /// Enum Szl for value: szl
            /// </summary>
            [EnumMember(Value = "szl")]
            Szl = 109,

            /// <summary>
            /// Enum Sek for value: sek
            /// </summary>
            [EnumMember(Value = "sek")]
            Sek = 110,

            /// <summary>
            /// Enum Chf for value: chf
            /// </summary>
            [EnumMember(Value = "chf")]
            Chf = 111,

            /// <summary>
            /// Enum Syp for value: syp
            /// </summary>
            [EnumMember(Value = "syp")]
            Syp = 112,

            /// <summary>
            /// Enum Thb for value: thb
            /// </summary>
            [EnumMember(Value = "thb")]
            Thb = 113,

            /// <summary>
            /// Enum Top for value: top
            /// </summary>
            [EnumMember(Value = "top")]
            Top = 114,

            /// <summary>
            /// Enum Ttd for value: ttd
            /// </summary>
            [EnumMember(Value = "ttd")]
            Ttd = 115,

            /// <summary>
            /// Enum Aed for value: aed
            /// </summary>
            [EnumMember(Value = "aed")]
            Aed = 116,

            /// <summary>
            /// Enum Tnd for value: tnd
            /// </summary>
            [EnumMember(Value = "tnd")]
            Tnd = 117,

            /// <summary>
            /// Enum Ugx for value: ugx
            /// </summary>
            [EnumMember(Value = "ugx")]
            Ugx = 118,

            /// <summary>
            /// Enum Mkd for value: mkd
            /// </summary>
            [EnumMember(Value = "mkd")]
            Mkd = 119,

            /// <summary>
            /// Enum Egp for value: egp
            /// </summary>
            [EnumMember(Value = "egp")]
            Egp = 120,

            /// <summary>
            /// Enum Gbp for value: gbp
            /// </summary>
            [EnumMember(Value = "gbp")]
            Gbp = 121,

            /// <summary>
            /// Enum Tzs for value: tzs
            /// </summary>
            [EnumMember(Value = "tzs")]
            Tzs = 122,

            /// <summary>
            /// Enum Usd for value: usd
            /// </summary>
            [EnumMember(Value = "usd")]
            Usd = 123,

            /// <summary>
            /// Enum Uyu for value: uyu
            /// </summary>
            [EnumMember(Value = "uyu")]
            Uyu = 124,

            /// <summary>
            /// Enum Uzs for value: uzs
            /// </summary>
            [EnumMember(Value = "uzs")]
            Uzs = 125,

            /// <summary>
            /// Enum Wst for value: wst
            /// </summary>
            [EnumMember(Value = "wst")]
            Wst = 126,

            /// <summary>
            /// Enum Yer for value: yer
            /// </summary>
            [EnumMember(Value = "yer")]
            Yer = 127,

            /// <summary>
            /// Enum Twd for value: twd
            /// </summary>
            [EnumMember(Value = "twd")]
            Twd = 128,

            /// <summary>
            /// Enum Cuc for value: cuc
            /// </summary>
            [EnumMember(Value = "cuc")]
            Cuc = 129,

            /// <summary>
            /// Enum Zwl for value: zwl
            /// </summary>
            [EnumMember(Value = "zwl")]
            Zwl = 130,

            /// <summary>
            /// Enum Tmt for value: tmt
            /// </summary>
            [EnumMember(Value = "tmt")]
            Tmt = 131,

            /// <summary>
            /// Enum Ghs for value: ghs
            /// </summary>
            [EnumMember(Value = "ghs")]
            Ghs = 132,

            /// <summary>
            /// Enum Vef for value: vef
            /// </summary>
            [EnumMember(Value = "vef")]
            Vef = 133,

            /// <summary>
            /// Enum Sdg for value: sdg
            /// </summary>
            [EnumMember(Value = "sdg")]
            Sdg = 134,

            /// <summary>
            /// Enum Uyi for value: uyi
            /// </summary>
            [EnumMember(Value = "uyi")]
            Uyi = 135,

            /// <summary>
            /// Enum Rsd for value: rsd
            /// </summary>
            [EnumMember(Value = "rsd")]
            Rsd = 136,

            /// <summary>
            /// Enum Mzn for value: mzn
            /// </summary>
            [EnumMember(Value = "mzn")]
            Mzn = 137,

            /// <summary>
            /// Enum Azn for value: azn
            /// </summary>
            [EnumMember(Value = "azn")]
            Azn = 138,

            /// <summary>
            /// Enum Ron for value: ron
            /// </summary>
            [EnumMember(Value = "ron")]
            Ron = 139,

            /// <summary>
            /// Enum Che for value: che
            /// </summary>
            [EnumMember(Value = "che")]
            Che = 140,

            /// <summary>
            /// Enum Chw for value: chw
            /// </summary>
            [EnumMember(Value = "chw")]
            Chw = 141,

            /// <summary>
            /// Enum Try for value: try
            /// </summary>
            [EnumMember(Value = "try")]
            Try = 142,

            /// <summary>
            /// Enum Xaf for value: xaf
            /// </summary>
            [EnumMember(Value = "xaf")]
            Xaf = 143,

            /// <summary>
            /// Enum Xcd for value: xcd
            /// </summary>
            [EnumMember(Value = "xcd")]
            Xcd = 144,

            /// <summary>
            /// Enum Xof for value: xof
            /// </summary>
            [EnumMember(Value = "xof")]
            Xof = 145,

            /// <summary>
            /// Enum Xpf for value: xpf
            /// </summary>
            [EnumMember(Value = "xpf")]
            Xpf = 146,

            /// <summary>
            /// Enum Xba for value: xba
            /// </summary>
            [EnumMember(Value = "xba")]
            Xba = 147,

            /// <summary>
            /// Enum Xbb for value: xbb
            /// </summary>
            [EnumMember(Value = "xbb")]
            Xbb = 148,

            /// <summary>
            /// Enum Xbc for value: xbc
            /// </summary>
            [EnumMember(Value = "xbc")]
            Xbc = 149,

            /// <summary>
            /// Enum Xbd for value: xbd
            /// </summary>
            [EnumMember(Value = "xbd")]
            Xbd = 150,

            /// <summary>
            /// Enum Xau for value: xau
            /// </summary>
            [EnumMember(Value = "xau")]
            Xau = 151,

            /// <summary>
            /// Enum Xdr for value: xdr
            /// </summary>
            [EnumMember(Value = "xdr")]
            Xdr = 152,

            /// <summary>
            /// Enum Xag for value: xag
            /// </summary>
            [EnumMember(Value = "xag")]
            Xag = 153,

            /// <summary>
            /// Enum Xpt for value: xpt
            /// </summary>
            [EnumMember(Value = "xpt")]
            Xpt = 154,

            /// <summary>
            /// Enum Xts for value: xts
            /// </summary>
            [EnumMember(Value = "xts")]
            Xts = 155,

            /// <summary>
            /// Enum Xpd for value: xpd
            /// </summary>
            [EnumMember(Value = "xpd")]
            Xpd = 156,

            /// <summary>
            /// Enum Xua for value: xua
            /// </summary>
            [EnumMember(Value = "xua")]
            Xua = 157,

            /// <summary>
            /// Enum Zmw for value: zmw
            /// </summary>
            [EnumMember(Value = "zmw")]
            Zmw = 158,

            /// <summary>
            /// Enum Srd for value: srd
            /// </summary>
            [EnumMember(Value = "srd")]
            Srd = 159,

            /// <summary>
            /// Enum Mga for value: mga
            /// </summary>
            [EnumMember(Value = "mga")]
            Mga = 160,

            /// <summary>
            /// Enum Cou for value: cou
            /// </summary>
            [EnumMember(Value = "cou")]
            Cou = 161,

            /// <summary>
            /// Enum Afn for value: afn
            /// </summary>
            [EnumMember(Value = "afn")]
            Afn = 162,

            /// <summary>
            /// Enum Tjs for value: tjs
            /// </summary>
            [EnumMember(Value = "tjs")]
            Tjs = 163,

            /// <summary>
            /// Enum Aoa for value: aoa
            /// </summary>
            [EnumMember(Value = "aoa")]
            Aoa = 164,

            /// <summary>
            /// Enum Byr for value: byr
            /// </summary>
            [EnumMember(Value = "byr")]
            Byr = 165,

            /// <summary>
            /// Enum Bgn for value: bgn
            /// </summary>
            [EnumMember(Value = "bgn")]
            Bgn = 166,

            /// <summary>
            /// Enum Cdf for value: cdf
            /// </summary>
            [EnumMember(Value = "cdf")]
            Cdf = 167,

            /// <summary>
            /// Enum Bam for value: bam
            /// </summary>
            [EnumMember(Value = "bam")]
            Bam = 168,

            /// <summary>
            /// Enum Eur for value: eur
            /// </summary>
            [EnumMember(Value = "eur")]
            Eur = 169,

            /// <summary>
            /// Enum Mxv for value: mxv
            /// </summary>
            [EnumMember(Value = "mxv")]
            Mxv = 170,

            /// <summary>
            /// Enum Uah for value: uah
            /// </summary>
            [EnumMember(Value = "uah")]
            Uah = 171,

            /// <summary>
            /// Enum Gel for value: gel
            /// </summary>
            [EnumMember(Value = "gel")]
            Gel = 172,

            /// <summary>
            /// Enum Bov for value: bov
            /// </summary>
            [EnumMember(Value = "bov")]
            Bov = 173,

            /// <summary>
            /// Enum Pln for value: pln
            /// </summary>
            [EnumMember(Value = "pln")]
            Pln = 174,

            /// <summary>
            /// Enum Brl for value: brl
            /// </summary>
            [EnumMember(Value = "brl")]
            Brl = 175,

            /// <summary>
            /// Enum Clf for value: clf
            /// </summary>
            [EnumMember(Value = "clf")]
            Clf = 176,

            /// <summary>
            /// Enum Xsu for value: xsu
            /// </summary>
            [EnumMember(Value = "xsu")]
            Xsu = 177,

            /// <summary>
            /// Enum Usn for value: usn
            /// </summary>
            [EnumMember(Value = "usn")]
            Usn = 178,

            /// <summary>
            /// Enum Xxx for value: xxx
            /// </summary>
            [EnumMember(Value = "xxx")]
            Xxx = 179

        }

        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        /// <value>Gets or Sets Currency</value>
        [DataMember(Name="currency", EmitDefaultValue=false)]
        public CurrencyEnum? Currency { get; set; }
        /// <summary>
        /// State of the schedule
        /// </summary>
        /// <value>State of the schedule</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StateEnum
        {
            /// <summary>
            /// Enum Init for value: init
            /// </summary>
            [EnumMember(Value = "init")]
            Init = 1,

            /// <summary>
            /// Enum InPayment for value: inPayment
            /// </summary>
            [EnumMember(Value = "inPayment")]
            InPayment = 2,

            /// <summary>
            /// Enum Payed for value: payed
            /// </summary>
            [EnumMember(Value = "payed")]
            Payed = 3,

            /// <summary>
            /// Enum Confirmed for value: confirmed
            /// </summary>
            [EnumMember(Value = "confirmed")]
            Confirmed = 4,

            /// <summary>
            /// Enum Refused for value: refused
            /// </summary>
            [EnumMember(Value = "refused")]
            Refused = 5,

            /// <summary>
            /// Enum Cancelled for value: cancelled
            /// </summary>
            [EnumMember(Value = "cancelled")]
            Cancelled = 6,

            /// <summary>
            /// Enum Pending for value: pending
            /// </summary>
            [EnumMember(Value = "pending")]
            Pending = 7,

            /// <summary>
            /// Enum Undetermined for value: undetermined
            /// </summary>
            [EnumMember(Value = "undetermined")]
            Undetermined = 8,

            /// <summary>
            /// Enum Discarded for value: discarded
            /// </summary>
            [EnumMember(Value = "discarded")]
            Discarded = 9,

            /// <summary>
            /// Enum Cashing for value: cashing
            /// </summary>
            [EnumMember(Value = "cashing")]
            Cashing = 10,

            /// <summary>
            /// Enum Cashed for value: cashed
            /// </summary>
            [EnumMember(Value = "cashed")]
            Cashed = 11

        }

        /// <summary>
        /// State of the schedule
        /// </summary>
        /// <value>State of the schedule</value>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public StateEnum? State { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Schedule" /> class.
        /// </summary>
        /// <param name="amount">Gets or Sets Amount.</param>
        /// <param name="date">Gets or Sets Date.</param>
        /// <param name="rank">Gets or Sets Rank.</param>
        /// <param name="currency">Gets or Sets Currency.</param>
        /// <param name="state">State of the schedule.</param>
        /// <param name="capturedAmount">Gets or Sets CapturedAmount.</param>
        /// <param name="remainingAmount">Gets or Sets RemainingAmount.</param>
        /// <param name="cancelledAmount">Gets or Sets CancelledAmount.</param>
        /// <param name="refundedAmount">Gets or Sets RefundedAmount.</param>
        public Schedule(long? amount = default(long?), DateTime? date = default(DateTime?), int? rank = default(int?), CurrencyEnum? currency = default(CurrencyEnum?), StateEnum? state = default(StateEnum?), long? capturedAmount = default(long?), long? remainingAmount = default(long?), long? cancelledAmount = default(long?), long? refundedAmount = default(long?))
        {
            this.Amount = amount;
            this.Date = date;
            this.Rank = rank;
            this.Currency = currency;
            this.State = state;
            this.CapturedAmount = capturedAmount;
            this.RemainingAmount = remainingAmount;
            this.CancelledAmount = cancelledAmount;
            this.RefundedAmount = refundedAmount;
        }
        
        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        /// <value>Gets or Sets Amount</value>
        [DataMember(Name="amount", EmitDefaultValue=false)]
        public long? Amount { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        /// <value>Gets or Sets Date</value>
        [DataMember(Name="date", EmitDefaultValue=false)]
        public DateTime? Date { get; set; }

        /// <summary>
        /// Gets or Sets Rank
        /// </summary>
        /// <value>Gets or Sets Rank</value>
        [DataMember(Name="rank", EmitDefaultValue=false)]
        public int? Rank { get; set; }



        /// <summary>
        /// Gets or Sets CapturedAmount
        /// </summary>
        /// <value>Gets or Sets CapturedAmount</value>
        [DataMember(Name="capturedAmount", EmitDefaultValue=false)]
        public long? CapturedAmount { get; set; }

        /// <summary>
        /// Gets or Sets RemainingAmount
        /// </summary>
        /// <value>Gets or Sets RemainingAmount</value>
        [DataMember(Name="remainingAmount", EmitDefaultValue=false)]
        public long? RemainingAmount { get; set; }

        /// <summary>
        /// Gets or Sets CancelledAmount
        /// </summary>
        /// <value>Gets or Sets CancelledAmount</value>
        [DataMember(Name="cancelledAmount", EmitDefaultValue=false)]
        public long? CancelledAmount { get; set; }

        /// <summary>
        /// Gets or Sets RefundedAmount
        /// </summary>
        /// <value>Gets or Sets RefundedAmount</value>
        [DataMember(Name="refundedAmount", EmitDefaultValue=false)]
        public long? RefundedAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Schedule {\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  Rank: ").Append(Rank).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  CapturedAmount: ").Append(CapturedAmount).Append("\n");
            sb.Append("  RemainingAmount: ").Append(RemainingAmount).Append("\n");
            sb.Append("  CancelledAmount: ").Append(CancelledAmount).Append("\n");
            sb.Append("  RefundedAmount: ").Append(RefundedAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Schedule);
        }

        /// <summary>
        /// Returns true if Schedule instances are equal
        /// </summary>
        /// <param name="input">Instance of Schedule to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Schedule input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.Rank == input.Rank ||
                    (this.Rank != null &&
                    this.Rank.Equals(input.Rank))
                ) && 
                (
                    this.Currency == input.Currency ||
                    (this.Currency != null &&
                    this.Currency.Equals(input.Currency))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.CapturedAmount == input.CapturedAmount ||
                    (this.CapturedAmount != null &&
                    this.CapturedAmount.Equals(input.CapturedAmount))
                ) && 
                (
                    this.RemainingAmount == input.RemainingAmount ||
                    (this.RemainingAmount != null &&
                    this.RemainingAmount.Equals(input.RemainingAmount))
                ) && 
                (
                    this.CancelledAmount == input.CancelledAmount ||
                    (this.CancelledAmount != null &&
                    this.CancelledAmount.Equals(input.CancelledAmount))
                ) && 
                (
                    this.RefundedAmount == input.RefundedAmount ||
                    (this.RefundedAmount != null &&
                    this.RefundedAmount.Equals(input.RefundedAmount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Amount != null)
                    hashCode = hashCode * 59 + this.Amount.GetHashCode();
                if (this.Date != null)
                    hashCode = hashCode * 59 + this.Date.GetHashCode();
                if (this.Rank != null)
                    hashCode = hashCode * 59 + this.Rank.GetHashCode();
                if (this.Currency != null)
                    hashCode = hashCode * 59 + this.Currency.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.CapturedAmount != null)
                    hashCode = hashCode * 59 + this.CapturedAmount.GetHashCode();
                if (this.RemainingAmount != null)
                    hashCode = hashCode * 59 + this.RemainingAmount.GetHashCode();
                if (this.CancelledAmount != null)
                    hashCode = hashCode * 59 + this.CancelledAmount.GetHashCode();
                if (this.RefundedAmount != null)
                    hashCode = hashCode * 59 + this.RefundedAmount.GetHashCode();
                return hashCode;
            }
        }
    }

}
